CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

SET(PROJ_NAME libargvs)
PROJECT(${PROJ_NAME})

SET(CMAKE_DEBUG_POSTFIX "_debug")

IF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    MESSAGE(STATUS "Platform: Window")
    IF (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        MESSAGE(STATUS "MSVC")

        MESSAGE(STATUS "MSVC")
        ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
        SET(CMAKE_CXX_FLAGS_DEBUG	"/D_DEBUG /MDd /Zi /Ob0 /Od /RTC1")
        SET(CMAKE_CXX_FLAGS_RELEASE	"/MD /O2 /Ob2 /D NDEBUG")

        ADD_LINK_OPTIONS(/SAFESEH:NO)

        ADD_COMPILE_OPTIONS("$<$<C_COMPILER_ID:MSVC>:/utf-8>")
        ADD_COMPILE_OPTIONS("$<$<CXX_COMPILER_ID:MSVC>:/utf-8>")
        SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/Binaries/win32)
        SET(LIBRARY_OUTPUT_PATH    ${PROJECT_SOURCE_DIR}/Binaries/win32)
        LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/Binaries/win32)
    ELSE()
        MESSAGE(STATUS "GCC")
        SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/Binaries/mingw)
        SET(LIBRARY_OUTPUT_PATH    ${PROJECT_SOURCE_DIR}/Binaries/mingw)
        LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/Binaries/mingw)
    ENDIF()
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    MESSAGE(STATUS "Platform: Linux")

    SET(CMAKE_CXX_COMPILER /usr/bin/c++)
    SET(CMAKE_C_COMPILER /usr/bin/cc)

    SET(CMAKE_CXX_FLAGS_DEBUG	"-std=c++11 -O0 -Wall -march=pentium4 -mmmx -g2 -ggdb")
    SET(CMAKE_CXX_FLAGS_RELEASE	"-std=c++11 -Wall -o3")

    SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/Binaries/linux)
    SET(LIBRARY_OUTPUT_PATH    ${PROJECT_SOURCE_DIR}/Binaries/linux)
    LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/Binaries/linux)
ELSE()
    MESSAGE(STATUS "Platform: ${CMAKE_SYSTEM_NAME}")
ENDIF(CMAKE_SYSTEM_NAME MATCHES "Windows")

IF(CMAKE_BUILD_TYPE AND (CMAKE_BUILD_TYPE STREQUAL "Debug"))
    ADD_DEFINITIONS(-DBUILD_DEBUG)
ENDIF()


FILE (GLOB SOURCE "./Source/*.*")

ADD_LIBRARY(${PROJ_NAME} STATIC ${SOURCE})

INCLUDE_DIRECTORIES(./Source)

ADD_SUBDIRECTORY(Examples)